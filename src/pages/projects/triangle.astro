---
import ProjectLayout from '../../components/ProjectLayout.astro';
import fs from 'node:fs/promises';
import path from 'node:path';

// シェーダファイルの読み込み
const shaderPath = path.join(process.cwd(), 'public', 'shaders', 'triangle.wgsl');
const shaderCode = await fs.readFile(shaderPath, 'utf-8');
const scriptCode = await fs.readFile(path.join(process.cwd(), 'src/projects/triangle.js'), 'utf-8');

// プロジェクト情報
export const projectInfo = {
  title: 'Basic Triangle',
  description: 'A simple demo that draws a basic triangle using WebGPU. Learn the basics of vertex and fragment shaders.',
  script: '/src/projects/triangle.js',
  date: '2025-03-07',
};

// プロジェクトID
const id = 'triangle';
---

<ProjectLayout
  title={projectInfo.title}
  description={projectInfo.description}
  id={id}
  scriptPath={projectInfo.script}
  codeBlocks={[
    {
      name: "Shader",
      code: shaderCode,
      language: "wgsl"
    },
    {
      name: "Script",
      code: scriptCode,
      language: "javascript"
    }
  ]}
>
  <div class="info-section">
    <h2>About This Demo</h2>
    <div>
      <p>
        This demo is the simplest example of drawing a basic triangle using WebGPU.
        It consists of the following elements:
      </p>
      <ul>
        <li><strong>Vertex Shader</strong>: Defines the position of each vertex of the triangle.</li>
        <li><strong>Fragment Shader</strong>: Defines the color of the triangle.</li>
        <li><strong>Rendering Pipeline</strong>: Combines shaders and rendering settings.</li>
      </ul>
      <p>
        WebGPU is a modern graphics API that enables high-performance graphics processing in browsers.
        This demo shows the basic usage of WebGPU.
      </p>
    </div>
  </div>
</ProjectLayout>
