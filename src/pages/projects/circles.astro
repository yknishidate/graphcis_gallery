<!-- ---
import ProjectLayout from '../../components/ProjectLayout.astro';
import shaderCode from '../../projects/shaders/circles.wgsl?raw';
import scriptCode from '../../projects/circles.js?raw';

// プロジェクト情報
export const projectInfo = {
  title: 'Circles Simulation',
  description: 'A WebGPU demo simulating 1000 moving circles using compute and render shaders.',
  script: '/src/projects/circles.js',
  date: '2025-03-09',
};

// プロジェクトID
const id = 'circles';
---

<ProjectLayout
  title={projectInfo.title}
  description={projectInfo.description}
  codeBlocks={[
    {
      name: "Shader",
      code: shaderCode,
      language: "wgsl"
    },
    {
      name: "Script",
      code: scriptCode,
      language: "javascript"
    }
  ]}
>
  <div class="info-section">
    <h2>About This Demo</h2>
    <div>
      <p>
        このデモは、WebGPUのコンピュートシェーダーとレンダーシェーダーを使用して、1000個の円を動的にシミュレーションします。
      </p>
      <ul>
        <li><strong>コンピュートシェーダー</strong>: 各円の位置と速度を並列に更新</li>
        <li><strong>インスタンシング描画</strong>: GPUの並列処理能力を活用して大量の円を効率的に描画</li>
        <li><strong>境界線の跳ね返り</strong>: 円が画面の端に当たると速度を反転</li>
      </ul>
      <p>
        デモでは、ランダムな初期位置と速度を持つ1000個の円を生成し、リアルタイムでその動きをシミュレーションします。
      </p>
    </div>
  </div>
</ProjectLayout>

<script type="module">
  import { initCirclesDemo } from '/src/projects/circles.js';
  // WebGPUデモの初期化
  async function initDemo() {
    try {
      const canvas = document.getElementById('webgpu-canvas');
      if (!canvas) {
        throw new Error('キャンバス要素が見つかりません。');
      }
      
      // キャンバスのサイズを設定
      const demoContainer = document.querySelector('.demo-container');
      canvas.width = demoContainer.clientWidth;
      canvas.height = 400;
  
      // WebGPUのサポートチェック
      if (!navigator.gpu) {
        throw new Error('WebGPUはこのブラウザでサポートされていません。Chrome 113以降またはその他の対応ブラウザをお使いください。');
      }
  
      // WebGPUがサポートされているか確認
      if (!navigator.gpu) {
        throw new Error('WebGPUはこのブラウザでサポートされていません。');
      }
      
      // アダプタの要求
      const adapter = await navigator.gpu.requestAdapter();
      if (!adapter) {
        throw new Error('WebGPUアダプタが見つかりません。');
      }
      
      // デバイスの要求
      const device = await adapter.requestDevice();
      
      // キャンバスのコンテキストを設定
      const context = canvas.getContext('webgpu');
      const format = navigator.gpu.getPreferredCanvasFormat();
      context.configure({
        device,
        format,
        alphaMode: 'premultiplied',
      });
      
      await initCirclesDemo(device, context, canvas, format);
    } catch (error) {
      console.error('エラー:', error);
      
      // エラーメッセージを表示
      const errorElement = document.getElementById('error-message');
      errorElement.textContent = `エラー: ${error.message}`;
      errorElement.style.display = 'block';
      
      // キャンバスを非表示
      const canvas = document.getElementById('webgpu-canvas');
      canvas.style.display = 'none';
    }
  }
  
  // ページ読み込み時にデモを初期化
  document.addEventListener('DOMContentLoaded', initDemo);
</script> -->
