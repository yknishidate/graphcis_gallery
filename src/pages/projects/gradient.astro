---
import ProjectLayout from '../../components/ProjectLayout.astro';
import shaderCode from '/shaders/gradient.wgsl?url&raw';
import scriptCode from '../../projects/gradient.js?raw';

// プロジェクト情報
export const projectInfo = {
  title: 'Compute Shader',
  description: 'A demo that uses WebGPU compute shaders to draw a colorful gradient across the canvas.',
  script: '/src/projects/gradient.js',
  date: '2025-03-08',
};

// プロジェクトID
const id = 'gradient';
---

<ProjectLayout
  title={projectInfo.title}
  description={projectInfo.description}
  id={id}
  scriptPath={projectInfo.script}
  codeBlocks={[
    {
      name: "Shader",
      code: shaderCode,
      language: "wgsl"
    },
    {
      name: "Script",
      code: scriptCode,
      language: "javascript"
    }
  ]}
>
  <div class="info-section">
    <h2>About This Demo</h2>
    <div>
      <p>
        This demo uses WebGPU compute shaders to draw a colorful gradient across the canvas.
        Compute shaders can utilize the GPU's parallel processing capabilities to perform image processing and calculations at high speed.
      </p>
      <ul>
        <li><strong>Compute Shader</strong>: A program for parallel computation on the GPU. It can perform calculations directly without using the graphics pipeline.</li>
        <li><strong>Storage Texture</strong>: A texture that can be written to from a compute shader. Used to store computation results.</li>
        <li><strong>Workgroup</strong>: The execution unit of a compute shader. The GPU executes many threads in parallel.</li>
      </ul>
      <p>
        In this demo, we calculate a color gradient based on each pixel's position, write the results to a texture, and then display it on the screen.
      </p>
    </div>
  </div>
</ProjectLayout>
